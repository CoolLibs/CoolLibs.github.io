"use strict";(self.webpackChunkcool_doc=self.webpackChunkcool_doc||[]).push([[8372],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8909:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},assets:function(){return u},toc:function(){return p},default:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={title:"C++ Fondamentals",date:new Date("2021-05-27T10:54:14.000Z"),author:"jules",tags:[],toc:!0,draft:!1},l=void 0,s={permalink:"/home/blog/cpp-fondamentals",source:"@site/blog/cpp-fondamentals.md",title:"C++ Fondamentals",description:"Stack vs Heap",date:"2021-05-27T10:54:14.000Z",formattedDate:"May 27, 2021",tags:[],readingTime:.12,truncated:!1,authors:[{name:"jules"}],prevItem:{title:"Int or Float ?",permalink:"/home/blog/int-or-float"},nextItem:{title:"Hijacking the Dereference Operators",permalink:"/home/blog/hijacking-the-dereference-operators"}},u={authorsImageUrls:[void 0]},p=[{value:"Stack vs Heap",id:"stack-vs-heap",children:[]},{value:"std::vector",id:"stdvector",children:[]},{value:"Smart Pointers",id:"smart-pointers",children:[]},{value:"std::string_view",id:"stdstring_view",children:[]},{value:"Precompiled Header",id:"precompiled-header",children:[]},{value:"Debug vs Release modes",id:"debug-vs-release-modes",children:[]}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"stack-vs-heap"},"Stack vs Heap"),(0,a.kt)("h2",{id:"stdvector"},"std::vector"),(0,a.kt)("p",null,"Vectors of vectors are evil."),(0,a.kt)("h2",{id:"smart-pointers"},"Smart Pointers"),(0,a.kt)("h2",{id:"stdstring_view"},"std::string_view"),(0,a.kt)("h2",{id:"precompiled-header"},"Precompiled Header"),(0,a.kt)("h2",{id:"debug-vs-release-modes"},"Debug vs Release modes"))}f.isMDXComponent=!0}}]);