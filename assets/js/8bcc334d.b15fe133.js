"use strict";(self.webpackChunkcool_docs=self.webpackChunkcool_docs||[]).push([[3235],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2460:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={},s=void 0,c={unversionedId:"lab/Writing Nodes/Standard constants and functions",id:"lab/Writing Nodes/Standard constants and functions",title:"Standard constants and functions",description:"You have access to quite a few constants and functions like PI, TAU, saturate() and smoothminpolynomial(). For a complete list check out Cool/res/shaders/math.glsl and res/shader-utils.glsl that are located next to your CoolLab executable.",source:"@site/docs/lab/03-Writing Nodes/70-Standard constants and functions.md",sourceDirName:"lab/03-Writing Nodes",slug:"/lab/Writing Nodes/Standard constants and functions",permalink:"/lab/Writing Nodes/Standard constants and functions",tags:[],version:"current",sidebarPosition:70,frontMatter:{},sidebar:"lab",previous:{title:"Helper functions",permalink:"/lab/Writing Nodes/Helper functions"},next:{title:"Generics",permalink:"/lab/Writing Nodes/Generics"}},u=[],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You have access to quite a few constants and functions like ",(0,a.kt)("inlineCode",{parentName:"p"},"PI"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"TAU"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"saturate()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"smooth_min_polynomial()"),". For a complete list check out ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CoolLibs/Cool/blob/main/res/shaders/math.glsl"},(0,a.kt)("em",{parentName:"a"},"Cool/res/shaders/math.glsl"))," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CoolLibs/Lab/tree/main/res/shader-utils.glsl"},(0,a.kt)("em",{parentName:"a"},"res/shader-utils.glsl"))," that are located next to your CoolLab executable."),(0,a.kt)("p",null,"You can also create your own helper files and ",(0,a.kt)("inlineCode",{parentName:"p"},"#include")," them in your nodes. This can be useful if you want to reuse a big chunk of code in several nodes. To do so, simply create your file in the CoolLab folder and then in your node:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-glsl"},'#include "_ROOT_FOLDER_/myfile.glsl"\n')),(0,a.kt)("p",null,"NB: ","_","ROOT","_","FOLDER","_"," is a special keyword that refers to the CoolLab folder (e.g. the folder containing the CoolLab executable)."))}d.isMDXComponent=!0}}]);